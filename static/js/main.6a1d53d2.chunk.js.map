{"version":3,"sources":["logo.svg","sortingAlgorithms/sortingAlgs.js","viewSort/viewSort.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","NUMBER_OF_ARRAY_BARS","ANIMATION_SPEED_MS","ViewSort","props","state","this","resetArray","min","max","random","setState","arrayBars","document","getElementsByClassName","style","backgroundImage","t0","performance","now","sortingAlg","t1","console","log","barOneIdx","barTwoIdx","barOneStyle","color","setTimeout","newHeight","height","animation","minIndx","newHeigh","newMinBar","oldMinBar","indx","ar","arr","temp","firstBar","secondBar","first","firstValue","second","secondValue","last","len","low","high","quickSort","pivot","lower","temp2","getPivot","animationType","getElementById","value","abs","wid","window","innerWidth","backgroundColor","className","class","position","top","width","onClick","mergeSort","selectSort","bubbleSort","htmlFor","id","type","onChange","handleChange","step","handleChangeSpeed","map","idx","key","marginTop","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6JAAAA,EAAOC,QAAU,IAA0B,kC,kMCApC,SAASC,EAAuBC,GACnC,IAAMC,EAAa,GACnB,GAAID,EAAME,QAAU,EAAG,OAAOF,EAC9B,IAAMG,EAAiBH,EAAMI,QAE7B,OAGF,SAASC,EACPC,EACAC,EACAC,EACAL,EACAF,GAEA,GAAIM,IAAaC,EAAQ,OACzB,IAAMC,EAAYC,KAAKC,OAAOJ,EAAWC,GAAU,GACnDH,EAAgBF,EAAgBI,EAAUE,EAAWH,EAAWL,GAChEI,EAAgBF,EAAgBM,EAAY,EAAGD,EAAQF,EAAWL,GAIpE,SACEK,EACAC,EACAE,EACAD,EACAL,EACAF,GAEA,IAAIW,EAAIL,EACJM,EAAIN,EACJO,EAAIL,EAAY,EACpB,KAAOI,GAAKJ,GAAaK,GAAKN,GAG5BP,EAAWc,KAAK,CAACF,EAAGC,IAGpBb,EAAWc,KAAK,CAACF,EAAGC,IAChBX,EAAeU,IAAMV,EAAeW,IAGtCb,EAAWc,KAAK,CAACH,EAAGT,EAAeU,KACnCP,EAAUM,KAAOT,EAAeU,OAIhCZ,EAAWc,KAAK,CAACH,EAAGT,EAAeW,KACnCR,EAAUM,KAAOT,EAAeW,MAGpC,KAAOD,GAAKJ,GAGVR,EAAWc,KAAK,CAACF,EAAGA,IAGpBZ,EAAWc,KAAK,CAACF,EAAGA,IAGpBZ,EAAWc,KAAK,CAACH,EAAGT,EAAeU,KACnCP,EAAUM,KAAOT,EAAeU,KAElC,KAAOC,GAAKN,GAGVP,EAAWc,KAAK,CAACD,EAAGA,IAGpBb,EAAWc,KAAK,CAACD,EAAGA,IAGpBb,EAAWc,KAAK,CAACH,EAAGT,EAAeW,KACnCR,EAAUM,KAAOT,EAAeW,KAvDlCE,CAAQV,EAAWC,EAAUE,EAAWD,EAAQL,EAAgBF,GAfhEI,CAAgBL,EAAO,EAAGA,EAAME,OAAS,EAAGC,EAAgBF,GACrDA,E,WCEPgB,EAAuB,GAIvBC,EAAqB,IAAID,EAQRE,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTrB,MAAO,IAJI,E,gEAYfsB,KAAKC,e,mCAML,IADA,IAgPiBC,EAAIC,EAhPfzB,EAAQ,GACNa,EAAI,EAAGA,EAAII,EAAsBJ,IACrCb,EAAMe,MA8OOS,EA9Oc,EA8OVC,EA9OY,IAgP9Bf,KAAKC,MAAMD,KAAKgB,UAAYD,EAAID,GAAOA,KA9O1CF,KAAKK,SAAS,CAAC3B,UAEf,IADA,IAAM4B,EAAYC,SAASC,uBAAuB,aACzCjB,EAAI,EAAGA,EAAIe,EAAU1B,OAAQW,IAElCe,EAAUf,GAAGkB,MAAMC,gBAAkB,iC,kCAMzC,IAAIC,EAAKC,YAAYC,MACflC,EAAamC,EAAkCd,KAAKD,MAAMrB,OAC5DqC,EAAKH,YAAYC,MACrBG,QAAQC,IAAI,oBAAsBF,EAAKJ,GAAM,kBAC7C,IALQ,eAKCpB,GACP,IAAMe,EAAYC,SAASC,uBAAuB,aAElD,GADsBjB,EAAI,IAAM,EACb,CAAC,IAAD,cACcZ,EAAWY,GADzB,GACV2B,EADU,KACCC,EADD,KAEXC,EAAcd,EAAUY,GAAWT,MAEnCY,GADcf,EAAUa,GAAWV,MAC3BlB,EAAI,IAAM,EA9Cd,MAHA,WAkDV+B,YAAW,WACTF,EAAYV,gBAAkB,mBAAmBW,EAAM,WACvDD,EAAYV,gBAAkB,mBAAmBW,EAAM,aACtD9B,EAAIK,QAEP0B,YAAW,WAAO,IAAD,cACgB3C,EAAWY,GAD3B,GACR2B,EADQ,KACGK,EADH,KAEKjB,EAAUY,GAAWT,MAC7Be,OAAZ,UAAwBD,EAAxB,QACChC,EAAIK,IAjBFL,EAAI,EAAGA,EAAIZ,EAAWC,OAAQW,IAAM,EAApCA,K,mCAyBT,IAAIoB,EAAKC,YAAYC,MACfY,EDHP,SAAiC/C,GAGpC,IADA,IAAMC,EAAa,GACXY,EAAI,EAAGA,EAAIb,EAAME,OAAOW,IAChC,CACI,IAAImC,EAAUnC,EACdZ,EAAWc,KAAK,CAACF,EAAGmC,IACpB,IAAI,IAAIlC,EAAID,EAAE,EAAGC,EAAId,EAAME,OAAQY,IAE/Bb,EAAWc,KAAK,CAACD,IACbd,EAAMgD,GAAWhD,EAAMc,KAEvBb,EAAWc,KAAK,CAACD,EAAGkC,IACpBA,EAAUlC,GAGlBb,EAAWc,KAAK,CAACF,EAAGb,EAAMa,GAAImC,EAAShD,EAAMgD,KAC7C,IAAIC,EAAWjD,EAAMgD,GACrBhD,EAAMgD,GAAWhD,EAAMa,GACvBb,EAAMa,GAAKoC,EAEf,OAAOhD,EClBemC,CAAmCd,KAAKD,MAAMrB,OAC5DqC,EAAKH,YAAYC,MACrBG,QAAQC,IAAI,qBAAuBF,EAAKJ,GAAM,kBAE9C,IADA,IAAML,EAAYC,SAASC,uBAAuB,aALpD,WAMWjB,GAEuB,IAAxBkC,EAAUlC,GAAGX,OAEb0C,YAAW,WAAO,IACP9B,EADM,YACDiC,EAAUlC,GADT,MAEDe,EAAUd,GAClBiB,MAAMC,gBAAkB,gCAE7BnB,EAAIK,GACsB,IAAxB6B,EAAUlC,GAAGX,OAElB0C,YAAW,WAAO,IAAD,cACQG,EAAUlC,GADlB,GACNC,EADM,KACHkC,EADG,KAEPE,EAAYtB,EAAUd,GACtBqC,EAAYvB,EAAUoB,GAC5BE,EAAUnB,MAAMC,gBAAkB,kCAClCmB,EAAUpB,MAAMC,gBAAkB,gCACnCnB,EAAIK,GAGP0B,YAAW,WAAO,IAAD,cACoBG,EAAUlC,GAD9B,GACNuC,EADM,KACAC,EADA,KACIL,EADJ,KACaM,EADb,KAEPJ,EAAYtB,EAAUwB,GACtBD,EAAYvB,EAAUoB,GAC5BG,EAAUpB,MAAMC,gBAAkB,8BAClCkB,EAAUnB,MAAMC,gBAAkB,kCAClCkB,EAAUnB,MAAMe,OAAhB,UAA4BQ,EAA5B,MACAH,EAAUpB,MAAMe,OAAhB,UAA4BO,EAA5B,MAEA,IAAI,IAAIxC,EAAIuC,EAAO,EAAGvC,EAAIe,EAAU1B,OAAQW,IAExCe,EAAUf,GAAGkB,MAAMC,gBAAkB,iCAE1CnB,EAAIK,IAlCNL,EAAI,EAAGA,EAAIkC,EAAU7C,OAAQW,IACrC,EADQA,K,mCA0CT,IAAIoB,EAAKC,YAAYC,MACfY,ED1BP,SAAiC/C,GAGpC,IADA,IAAMC,EAAa,GACXY,EAAI,EAAGA,EAAIb,EAAME,OAAQW,IACjC,CACI,IAAI,IAAIC,EAAI,EAAEA,EAAId,EAAME,OAASW,EAAI,EAAGC,IACxC,CAEI,GADAb,EAAWc,KAAK,CAACD,IACbd,EAAMc,GAAKd,EAAMc,EAAE,GACvB,CACIb,EAAWc,KAAK,CAACD,EAAGd,EAAMc,GAAIA,EAAE,EAAGd,EAAMc,EAAE,KAC3C,IAAIyC,EAAOvD,EAAMc,GACjBd,EAAMc,GAAKd,EAAMc,EAAE,GACnBd,EAAMc,EAAE,GAAKyC,EAEjBtD,EAAWc,KAAK,CAACD,EAAGA,EAAE,IAE1Bb,EAAWc,KAAK,CAACF,EAAGb,EAAME,QAAQ,IAEtC,OAAOD,ECOemC,CAAmCd,KAAKD,MAAMrB,OAC5DqC,EAAKH,YAAYC,MACrBG,QAAQC,IAAI,qBAAuBF,EAAKJ,GAAM,kBAE9C,IADA,IAAML,EAAYC,SAASC,uBAAuB,aALtD,WAMYjB,GAEuB,IAAxBkC,EAAUlC,GAAGX,OAEZ0C,YAAW,WAAO,IACP9B,EADM,YACDiC,EAAUlC,GADT,MAEP2C,EAAW5B,EAAUd,GACrB2C,EAAY7B,EAAUd,EAAE,GAC9B0C,EAASzB,MAAMC,gBAAkB,gCACjCyB,EAAU1B,MAAMC,gBAAkB,gCAEnCnB,EAAIK,GACuB,IAAxB6B,EAAUlC,GAAGX,OAEnB0C,YAAW,WAAO,IAAD,cACoCG,EAAUlC,GAD9C,GACN6C,EADM,KACCC,EADD,KACaC,EADb,KACqBC,EADrB,KAEPL,EAAW5B,EAAU8B,GACrBD,EAAY7B,EAAUgC,GAC5BJ,EAASzB,MAAMe,OAAf,UAA2Be,EAA3B,MACAL,EAASzB,MAAMC,gBAAkB,8BACjCyB,EAAU1B,MAAMe,OAAhB,UAA4Ba,EAA5B,MACID,GAASE,IAAQH,EAAU1B,MAAMC,gBAAkB,mCACxDnB,EAAIK,GACsB,IAAxB6B,EAAUlC,GAAGX,OAElB0C,YAAW,WAAO,IAAD,cACUG,EAAUlC,GADpB,GACNiD,EADM,KACAC,EADA,UAEInC,EAAUmC,EAAMD,EAAO,GAC/B/B,MAAMC,gBAAkB,oCAClCnB,EAAIK,GAEP0B,YAAW,WAAO,IAAD,cACWG,EAAUlC,GADrB,GACN6C,EADM,KACCE,EADD,KAEPJ,EAAW5B,EAAU8B,GACrBD,EAAY7B,EAAUgC,GAC5BJ,EAASzB,MAAMC,gBAAkB,+BAC7B0B,GAASE,IAAQH,EAAU1B,MAAMC,gBAAkB,kCACxDnB,EAAIK,IArCPL,EAAI,EAAGA,EAAIkC,EAAU7C,OAAQW,IACpC,EADOA,K,kCA6CR,IAAIoB,EAAKC,YAAYC,MACfY,EDtDP,SAAgC/C,EAAMgE,EAAKC,GAG9C,IAAMhE,EAAa,GAGnB,OAGA,SAASiE,EAAUlE,EAAMgE,EAAKC,EAAMhE,GAEhC,GAAG+D,EAAMC,EACT,CACI,IAAIE,EASZ,SAAkBnE,EAAOgE,EAAKC,EAAMhE,GAEhC,IAAImE,EAASJ,EAAM,EACfG,EAAQnE,EAAMiE,GAElBhE,EAAWc,KAAK,CAAC,WAAYkD,IAE7B,IAAI,IAAIpD,EAAImD,EAAMnD,EAAIoD,EAAMpD,IAExB,GAAGb,EAAMa,GAAKsD,EACd,CACIC,IAEAnE,EAAWc,KAAK,CAAC,WAAYqD,IAC7BnE,EAAWc,KAAK,CAAC,OAAQqD,EAAOpE,EAAMoE,GAAQvD,EAAGb,EAAMa,KAEvD,IAAI0C,EAAOvD,EAAMoE,GACjBpE,EAAMoE,GAASpE,EAAMa,GACrBb,EAAMa,GAAK0C,OAGXtD,EAAWc,KAAK,CAAC,UAAWF,IAGpCuD,IACAnE,EAAWc,KAAK,CAAC,OAAQqD,EAAOpE,EAAMoE,GAAQH,EAAMjE,EAAMiE,KAC1D,IAAII,EAAQrE,EAAMiE,GAIlB,OAHAjE,EAAMiE,GAAQjE,EAAMoE,GACpBpE,EAAMoE,GAASC,EACfpE,EAAWc,KAAK,CAAC,WAAYkD,IACtBG,EAvCSE,CAAStE,EAAOgE,EAAKC,EAAMhE,GACvCiE,EAAUlE,EAAOgE,EAAKG,EAAM,EAAGlE,GAC/BiE,EAAUlE,EAAOmE,EAAM,EAAGF,EAAMhE,IAXxCiE,CAAUlE,EAAMgE,EAAKC,EAAMhE,GAEpBA,ECgDemC,CAAkCd,KAAKD,MAAMrB,MAAO,EAAGsB,KAAKD,MAAMrB,MAAME,OAAO,GAC7FmC,EAAKH,YAAYC,MACrBG,QAAQC,IAAI,oBAAsBF,EAAKJ,GAAM,kBAE7C,IADA,IAAML,EAAYC,SAASC,uBAAuB,aALtD,WAMYjB,GAEJ,IAAI0D,EAAgBxB,EAAUlC,GAAG,GACZ,SAAlB0D,EAEC3B,YAAW,WAAO,IAAD,cACyCG,EAAUlC,GADnD,GACD6C,GADC,WACMC,EADN,KACkBC,EADlB,KAC0BC,EAD1B,KAEPL,EAAW5B,EAAU8B,GACrBD,EAAY7B,EAAUgC,GAC5BJ,EAASzB,MAAMe,OAAf,UAA2Be,EAA3B,MACAL,EAASzB,MAAMC,gBAAkB,kCACjCyB,EAAU1B,MAAMe,OAAhB,UAA4Ba,EAA5B,QAED9C,EAAIK,GACgB,aAAlBqD,EAEL3B,YAAW,WAAO,IAAD,cACOG,EAAUlC,GADjB,GACDoD,GADC,WAEIrC,EAAUqC,GAClBlC,MAAMC,gBAAkB,kCAClCnB,EAAIK,GACgB,YAAlBqD,EAEL3B,YAAW,WAAO,IAAD,cACOG,EAAUlC,GADjB,GACDoD,GADC,WAEIrC,EAAUqC,GAClBlC,MAAMC,gBAAkB,gCAClCnB,EAAIK,GACgB,YAAlBqD,EAEL3B,YAAW,WAAO,IAAD,cACUG,EAAUlC,GADpB,GACNiD,EADM,KACAC,EADA,UAEInC,EAAUmC,EAAMD,EAAO,GAC/B/B,MAAMC,gBAAkB,oCAClCnB,EAAIK,GACgB,aAAlBqD,GAEL3B,YAAW,WAAO,IAAD,cACOG,EAAUlC,GADjB,GACDoD,GADC,WAEIrC,EAAUqC,GAClBlC,MAAMC,gBAAkB,oCAClCnB,EAAIK,IAzCPL,EAAI,EAAGA,EAAIkC,EAAU7C,OAAQW,IACpC,EADOA,K,qCAkDRI,EAAuBY,SAAS2C,eAAe,cAAcC,MAC7DnD,KAAKC,e,0CAILL,EAAqBR,KAAKgE,IAAI7C,SAAS2C,eAAe,eAAeC,MAAM,O,+BAI9E,IAAD,OACWzE,EAASsB,KAAKD,MAAdrB,MACH2E,EAAwB,GAAlBC,OAAOC,WAAe5D,EAChC,OACI,0BAAMc,MAAO,CAAC+C,gBAAiB,UAAWhC,OAAQ,UAClD,yBAAKiC,UAAU,mBACX,yBAAKC,MAAM,SAASjD,MAAS,CAACkD,SAAU,QAASC,IAAK,IAAKC,MAAO,SAClE,4BAAQC,QAAS,kBAAM,EAAK7D,eAA5B,aACA,4BAAQ6D,QAAS,kBAAM,EAAKC,cAA5B,cACA,4BAAQD,QAAS,kBAAM,EAAKE,eAA5B,eACA,4BAAQF,QAAS,kBAAM,EAAKG,eAA5B,eACA,4BAAQH,QAAS,kBAAM,EAAKlB,cAA5B,cACA,yBAAKc,MAAM,kBACX,2BAAOQ,QAAQ,aAAazD,MAAO,CAACY,MAAO,UAA3C,SACA,2BAAO8C,GAAG,aAAaT,MAAM,SAASU,KAAK,QAASlE,IAAI,IAAIC,IAAI,MAAMkE,SAAU,kBAAM,EAAKC,gBAAgBC,KAAK,MAChH,2BAAOL,QAAQ,cAAczD,MAAO,CAACY,MAAO,UAA5C,UACA,2BAAO8C,GAAG,cAAcT,MAAM,SAASU,KAAK,QAAQlE,IAAI,KAAKC,IAAI,MAAMkE,SAAU,kBAAM,EAAKG,qBAAqBD,KAAK,QAKrH7F,EAAM+F,KAAI,SAACtB,EAAMuB,GAAP,OACP,yBACAjB,UAAU,YACVkB,IAAKD,EACLjE,MAAO,CAACe,OAAO,GAAD,OAAK2B,EAAL,MAAgBU,MAAM,GAAD,OAAKR,EAAL,MAAcuB,UAAW,mB,GAxP1CC,IAAMC,WCN7BC,MARf,WACE,OACE,yBAAKtB,UAAU,OACd,kBAAC,EAAD,QCIeuB,QACW,cAA7B1B,OAAO2B,SAASC,UAEe,UAA7B5B,OAAO2B,SAASC,UAEhB5B,OAAO2B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/E,SAAS2C,eAAe,SDyHpB,kBAAmBqC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9E,QAAQ8E,MAAMA,EAAMC,c","file":"static/js/main.6a1d53d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function getMergeSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n  }\n  \n  function mergeSortHelper(\n    mainArray,\n    startIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n  }\n  \n  function doMerge(\n    mainArray,\n    startIdx,\n    middleIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n      // These are the values that we're comparing; we push them once\n      // to change their color.\n      animations.push([i, j]);\n      // These are the values that we're comparing; we push them a second\n      // time to revert their color.\n      animations.push([i, j]);\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n        // We overwrite the value at index k in the original array with the\n        // value at index i in the auxiliary array.\n        animations.push([k, auxiliaryArray[i]]);\n        mainArray[k++] = auxiliaryArray[i++];\n      } else {\n        // We overwrite the value at index k in the original array with the\n        // value at index j in the auxiliary array.\n        animations.push([k, auxiliaryArray[j]]);\n        mainArray[k++] = auxiliaryArray[j++];\n      }\n    }\n    while (i <= middleIdx) {\n      // These are the values that we're comparing; we push them once\n      // to change their color.\n      animations.push([i, i]);\n      // These are the values that we're comparing; we push them a second\n      // time to revert their color.\n      animations.push([i, i]);\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n      // These are the values that we're comparing; we push them once\n      // to change their color.\n      animations.push([j, j]);\n      // These are the values that we're comparing; we push them a second\n      // time to revert their color.\n      animations.push([j, j]);\n      // We overwrite the value at index k in the original array with the\n      // value at index j in the auxiliary array.\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n\n\nexport function getSelectSortAnimations(array)\n{\n    const animations = [];\n    for(let i = 0; i < array.length;i++)\n    {\n        let minIndx = i;\n        animations.push([i, minIndx]);\n        for(let j = i+1; j < array.length; j++)\n        {\n            animations.push([j]);\n            if( array[minIndx] > array[j])\n            {\n                animations.push([j, minIndx]);\n                minIndx = j;\n            }\n        }\n        animations.push([i, array[i], minIndx, array[minIndx]]);\n        let newHeigh = array[minIndx];\n        array[minIndx] = array[i];\n        array[i] = newHeigh;\n    }\n    return animations;\n}\n\nexport function getBubbleSortAnimations(array)\n{\n    const animations = [];\n    for(let i = 0; i < array.length; i++)\n    {\n        for(let j = 0;j < array.length - i - 1; j++)\n        {\n            animations.push([j])\n            if (array[j] > array[j+1])\n            {\n                animations.push([j, array[j], j+1, array[j+1]]);\n                let temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n            animations.push([j, j+1]);\n        }\n        animations.push([i, array.length, false]);\n    }\n    return animations;\n}\n\nexport function getQuickSortAnimations(array,low, high)\n{\n\n    const animations = [];\n    quickSort(array,low, high, animations);\n\n    return animations;\n    \n\n    function quickSort(array,low, high, animations)\n    {\n        if(low < high)\n        {\n            let pivot = getPivot(array, low, high, animations)\n            quickSort(array, low, pivot-1, animations)\n            quickSort(array, pivot+1, high, animations)\n            \n        }\n    }\n\n\n\n    function getPivot(array, low, high, animations)\n    {\n        let lower  = low - 1;\n        let pivot = array[high]\n        \n        animations.push(['setPivot', high])\n\n        for(let i = low ; i < high; i++)\n        {\n            if(array[i] < pivot)\n            {\n                lower++; \n\n                animations.push(['setLower', lower])\n                animations.push([\"swap\", lower, array[lower], i, array[i]])\n\n                let temp = array[lower]; \n                array[lower] = array[i]; \n                array[i] = temp; \n                \n            }else{\n                animations.push(['setHigh', i]);\n            }\n        }\n        lower++;\n        animations.push([\"swap\", lower, array[lower], high, array[high]])\n        let temp2 = array[high];\n        array[high] = array[lower];\n        array[lower] = temp2;\n        animations.push(['pivotOff', high])\n        return lower;\n    }\n\n}\n\n","import React from 'react';\nimport './viewSort.css';\nimport * as sortingAlg from '../sortingAlgorithms/sortingAlgs';\nimport { unmountComponentAtNode } from 'react-dom';\nimport { render } from '@testing-library/react';\n\n    // Change this value for the number of bars (value) in the array.\nlet NUMBER_OF_ARRAY_BARS = 10;\n\n\n    // Change this value for the speed of the animations.\nlet ANIMATION_SPEED_MS = 500/NUMBER_OF_ARRAY_BARS;\n    \n    // This is the main color of the array bars.\nconst PRIMARY_COLOR = '#03DAC5';\n    \n    // This is the color of array bars that are being compared throughout the animations.\nlet SECONDARY_COLOR = 'red';\n\nexport default class ViewSort extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [], \n        };\n        \n    }\n\n\n    componentDidMount() \n    {\n        this.resetArray();\n    }\n\n    resetArray()\n    {\n        const array = [];\n        for(let i = 0; i < NUMBER_OF_ARRAY_BARS; i++){\n            array.push(generateRandInt(1,500));\n        }\n        this.setState({array});\n        const arrayBars = document.getElementsByClassName('array-bar');\n        for (let i = 0; i < arrayBars.length; i++)\n        {\n            arrayBars[i].style.backgroundImage = \"linear-gradient(pink, white)\";\n        }\n        \n    }\n\n    mergeSort() {\n        var t0 = performance.now()\n        const animations = sortingAlg.getMergeSortAnimations(this.state.array);\n        var t1 = performance.now()\n        console.log(\"Merge Sort Took \" + (t1 - t0) + \" milliseconds.\");\n        for (let i = 0; i < animations.length; i++) {\n          const arrayBars = document.getElementsByClassName('array-bar');\n          const isColorChange = i % 3 !== 2;\n          if (isColorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundImage = \"linear-gradient(\"+color+\", white)\";\n              barOneStyle.backgroundImage = \"linear-gradient(\"+color+\", white)\";\n            }, i * ANIMATION_SPEED_MS);\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n          }\n        }\n      }\n\n\n      selectSort()\n      {\n        var t0 = performance.now()\n        const animation = sortingAlg.getSelectSortAnimations(this.state.array);\n        var t1 = performance.now()\n        console.log(\"Select Sort Took \" + (t1 - t0) + \" milliseconds.\");\n        const arrayBars = document.getElementsByClassName('array-bar');\n        for (let i = 0; i < animation.length; i++)\n        {\n            if (animation[i].length === 1)\n            {\n                setTimeout(() => {\n                    const [j] = animation[i];\n                    const bar = arrayBars[j];\n                    bar.style.backgroundImage = \"linear-gradient(red, white)\";\n                    \n                }, i * ANIMATION_SPEED_MS);\n            }else if(animation[i].length === 2)\n            {\n                setTimeout(() => {\n                    const [j, minIndx] = animation[i];\n                    const newMinBar = arrayBars[j];\n                    const oldMinBar = arrayBars[minIndx];\n                    newMinBar.style.backgroundImage = \"linear-gradient(#03DAC5, white)\";\n                    oldMinBar.style.backgroundImage = \"linear-gradient(red, white)\";\n                }, i * ANIMATION_SPEED_MS);\n        \n            }else{\n                setTimeout(() => {\n                    const [indx, ar, minIndx, arr] = animation[i];\n                    const newMinBar = arrayBars[indx];\n                    const oldMinBar = arrayBars[minIndx];\n                    oldMinBar.style.backgroundImage = \"linear-gradient(red, white)\";\n                    newMinBar.style.backgroundImage = \"linear-gradient(#03DAC5, white)\";\n                    newMinBar.style.height = `${arr}px`;\n                    oldMinBar.style.height = `${ar}px`;\n\n                    for(let i = indx + 1; i < arrayBars.length; i++)\n                    {\n                        arrayBars[i].style.backgroundImage = \"linear-gradient(pink, white)\";\n                    }\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n      }\n\n\n    bubbleSort()\n    {\n        var t0 = performance.now()\n        const animation = sortingAlg.getBubbleSortAnimations(this.state.array);\n        var t1 = performance.now()\n        console.log(\"Bubble Sort Took \" + (t1 - t0) + \" milliseconds.\")\n        const arrayBars = document.getElementsByClassName('array-bar');\n        for(let i = 0; i < animation.length; i++)\n        {\n            if(animation[i].length === 1)\n            {\n                setTimeout(() => {\n                    const [j] = animation[i];\n                    const firstBar = arrayBars[j];\n                    const secondBar = arrayBars[j+1];\n                    firstBar.style.backgroundImage = \"linear-gradient(green, white)\";\n                    secondBar.style.backgroundImage = \"linear-gradient(red, white)\";\n                    //if (begining != minIndx) minBar.style.backgroundColor = 'pink';\n                }, i * ANIMATION_SPEED_MS);\n            }else if (animation[i].length === 4)\n            {\n                setTimeout(() => {\n                    const [first, firstValue, second, secondValue] = animation[i];\n                    const firstBar = arrayBars[first];\n                    const secondBar = arrayBars[second];\n                    firstBar.style.height = `${secondValue}px`;\n                    firstBar.style.backgroundImage = \"linear-gradient(red, white)\";\n                    secondBar.style.height = `${firstValue}px`;\n                    if (first != second) secondBar.style.backgroundImage = \"linear-gradient(green, white)\";\n                }, i * ANIMATION_SPEED_MS);\n            }else if(animation[i].length === 3)\n            {\n                setTimeout(() => {\n                    const [last, len, x] = animation[i];\n                    const firstBar = arrayBars[len - last - 1];\n                    firstBar.style.backgroundImage = \"linear-gradient(#03DAC5, white)\";\n                }, i * ANIMATION_SPEED_MS);\n            }else{\n                setTimeout(() => {\n                    const [first, second] = animation[i];\n                    const firstBar = arrayBars[first];\n                    const secondBar = arrayBars[second];\n                    firstBar.style.backgroundImage = \"linear-gradient(pink, white)\";\n                    if (first != second) secondBar.style.backgroundImage = \"linear-gradient(pink, white)\";\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n\n    quickSort()\n    {\n        var t0 = performance.now()\n        const animation = sortingAlg.getQuickSortAnimations(this.state.array, 0, this.state.array.length-1);\n        var t1 = performance.now()\n        console.log(\"Quick Sort Took \" + (t1 - t0) + \" milliseconds.\")\n        const arrayBars = document.getElementsByClassName('array-bar');\n        for(let i = 0; i < animation.length; i++)\n        {\n            let animationType = animation[i][0];\n            if(animationType === \"swap\")\n            {\n                setTimeout(() => {\n                    const [emp, first, firstValue, second, secondValue] = animation[i];\n                    const firstBar = arrayBars[first];\n                    const secondBar = arrayBars[second];\n                    firstBar.style.height = `${secondValue}px`;\n                    firstBar.style.backgroundImage = \"linear-gradient(#03DAC5, white)\";\n                    secondBar.style.height = `${firstValue}px`;\n                    //secondBar.style.backgroundColor = PRIMARY_COLOR;\n                }, i * ANIMATION_SPEED_MS);\n            }else if(animationType === \"setPivot\")\n            {\n                setTimeout(() => {\n                    const [emp, high] = animation[i];\n                    const firstBar = arrayBars[high];\n                    firstBar.style.backgroundImage = \"linear-gradient(green, white)\";\n                }, i * ANIMATION_SPEED_MS);\n            }else if(animationType === \"setHigh\")\n            {\n                setTimeout(() => {\n                    const [emp, high] = animation[i];\n                    const firstBar = arrayBars[high];\n                    firstBar.style.backgroundImage = \"linear-gradient(red, white)\";\n                }, i * ANIMATION_SPEED_MS);\n            }else if(animationType === \"setLowe\")\n            {\n                setTimeout(() => {\n                    const [last, len, x] = animation[i];\n                    const firstBar = arrayBars[len - last - 1];\n                    firstBar.style.backgroundImage = \"linear-gradient(#03DAC5, white)\";\n                }, i * ANIMATION_SPEED_MS);\n            }else if(animationType === \"pivotOff\")\n            {\n                setTimeout(() => {\n                    const [emp, high] = animation[i];\n                    const firstBar = arrayBars[high];\n                    firstBar.style.backgroundImage = \"linear-gradient(#03DAC5, white)\";\n                }, i * ANIMATION_SPEED_MS);\n            }\n\n        }\n    }\n\n\n        \n    handleChange() {\n        NUMBER_OF_ARRAY_BARS = document.getElementById('sliderSize').value;\n        this.resetArray();\n      }\n\n      handleChangeSpeed() {\n        ANIMATION_SPEED_MS = Math.abs(document.getElementById('sliderSpeed').value-500)\n      }\n\n    render()\n    {\n        const {array} = this.state;\n        let wid = window.innerWidth*.50/NUMBER_OF_ARRAY_BARS;\n        return(\n            <body style={{backgroundColor: \"#121212\", height: \"100vh\"}}>\n            <div className=\"array-container\" >\n                <div class=\"navBar\" style = {{position: \"fixed\", top: \"0\", width: \"100%\"}}>\n                <button onClick={() => this.resetArray()}>New Array</button>\n                <button onClick={() => this.mergeSort()}>Merge Sort</button>\n                <button onClick={() => this.selectSort()}>Select Sort</button>\n                <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n                <button onClick={() => this.quickSort()}>Quick Sort</button>\n                <div class=\"slidecontainer\">\n                <label htmlFor=\"sliderSize\" style={{color: \"white\" }}>Size </label>\n                <input id=\"sliderSize\" class=\"slider\" type=\"range\"  min=\"5\" max=\"200\" onChange={() => this.handleChange()} step=\"1\"/>\n                <label htmlFor=\"sliderSpeed\" style={{color: \"white\"}}>Speed </label>\n                <input id=\"sliderSpeed\" class=\"slider\" type=\"range\" min=\".5\" max=\"500\" onChange={() => this.handleChangeSpeed()} step=\"1\"/>\n                \n                </div>\n                \n                </div>\n                {array.map((value,idx) => (\n                    <div \n                    className=\"array-bar\" \n                    key={idx}\n                    style={{height: `${value}px`, width: `${wid}px`, marginTop: \"50px\"}}></div>\n                ))}\n            </div>\n           </body>\n        );\n\n    \n    }\n}\n\n\nfunction generateRandInt(min,max)\n{\n    return Math.floor(Math.random() * (max-min) + min)\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ViewSort from './viewSort/viewSort';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ViewSort></ViewSort>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}